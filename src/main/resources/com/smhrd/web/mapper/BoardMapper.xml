<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smhrd.web.mapper.BoardMapper">

    <!-- 기존 사용자 관련 쿼리들 (유지) -->
    <select id="selectUserByEmail" parameterType="string" resultType="com.smhrd.web.entity.Board">
        SELECT user_idx, email, pw, nick, auth_type, social_id, alg_code, profile_img  FROM cf_user WHERE email = #{email}
    </select>
    
	<insert id="insertSocialUser" parameterType="com.smhrd.web.entity.Board">
	  INSERT INTO cf_user(email, pw, nick, auth_type, social_id,
	                      alg_code, prefer_taste, cooking_skill,
	                      joined_at, profile_img)
	  VALUES(#{email}, #{pw}, #{nick}, #{auth_type}, #{social_id},
	         #{alg_code}, #{prefer_taste}, #{cooking_skill},
	         #{joined_at}, #{profile_img})
	</insert>

    <select id="selectUserByIdx" parameterType="int" resultType="com.smhrd.web.entity.Board">
        SELECT * FROM cf_user WHERE user_idx = #{user_idx}
    </select>

    <update id="updateUserInfo" parameterType="com.smhrd.web.entity.Board">
        UPDATE cf_user
        SET nick = #{nick}, alg_code = #{alg_code}, prefer_taste = #{prefer_taste}, cooking_skill = #{cooking_skill}
        WHERE user_idx = #{user_idx}
    </update>

    <select id="selectRecipesByIds" parameterType="list" resultType="com.smhrd.web.entity.Board">
        SELECT * FROM cf_recipe
        WHERE recipe_idx IN
        <foreach item="id" collection="recipeIdxList" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <!-- ================== NEW: 레시피 조회수 관련 쿼리 ================== -->
    
    <!-- 레시피 조회수 증가 -->
    <update id="updateRecipeViewCount">
        UPDATE cf_recipe 
        SET view_count = COALESCE(view_count, 0) + 1 
        WHERE recipe_idx = #{recipeIdx}
    </update>
    
    <!-- 조회수 기준 상위 레시피 조회 (메인페이지용) -->
    <select id="getTopRecipesByViewCount" resultType="com.smhrd.web.entity.Board">
        SELECT 
            recipe_idx, recipe_name, recipe_desc, recipe_img, 
            cook_type, recipe_difficulty, cooking_time, servings, 
            tags, COALESCE(view_count, 0) as view_count, created_at
        FROM cf_recipe 
        WHERE recipe_name IS NOT NULL 
          AND recipe_desc IS NOT NULL 
          AND recipe_img IS NOT NULL
          AND recipe_img != ''
        ORDER BY COALESCE(view_count, 0) DESC, created_at DESC
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>
    
    <!-- 조회수 기준 정렬된 레시피 목록 조회 -->
    <select id="getRecipesSortedByViewCount" resultType="com.smhrd.web.entity.Board">
        SELECT 
            recipe_idx, recipe_name, recipe_desc, recipe_img, 
            cook_type, recipe_difficulty, cooking_time, servings, 
            tags, COALESCE(view_count, 0) as view_count, created_at,
            (SELECT COUNT(*) FROM cf_review WHERE recipe_idx = r.recipe_idx) as review_count
        FROM cf_recipe r
        WHERE recipe_name IS NOT NULL 
          AND recipe_desc IS NOT NULL
        ORDER BY COALESCE(view_count, 0) DESC, created_at DESC
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>
    
    <!-- 특정 레시피 상세 정보 조회 (조회수 포함) -->
    <select id="getRecipeDetailWithViewCount" resultType="com.smhrd.web.entity.Board">
        SELECT 
            r.*, 
            u.nick as author_nick,
            COALESCE(r.view_count, 0) as view_count,
            (SELECT COUNT(*) FROM cf_review WHERE recipe_idx = r.recipe_idx) as review_count
        FROM cf_recipe r
        LEFT JOIN cf_user u ON r.user_idx = u.user_idx
        WHERE r.recipe_idx = #{recipeIdx}
    </select>

    <!-- ================== NEW: 리뷰 관련 쿼리 ================== -->
    
    <!-- 레시피에 리뷰 작성 -->
    <insert id="insertRecipeReview">
        INSERT INTO cf_review (recipe_idx, user_idx, cmt_content, super_idx, created_at)
        VALUES (#{recipeIdx}, #{userIdx}, #{cmtContent}, #{superIdx}, NOW())
    </insert>
    
    <!-- 특정 레시피의 리뷰 목록 조회 -->
    <select id="getRecipeReviews" resultType="com.smhrd.web.entity.Board">
        SELECT 
            r.review_idx, r.recipe_idx, r.cmt_content, r.created_at, r.super_idx,
            u.nick, u.user_idx
        FROM cf_review r
        INNER JOIN cf_user u ON r.user_idx = u.user_idx
        WHERE r.recipe_idx = #{recipeIdx}
        ORDER BY 
            CASE WHEN r.super_idx IS NULL THEN r.review_idx ELSE r.super_idx END ASC,
            r.super_idx ASC,
            r.created_at ASC
        <if test="limit != null">
            LIMIT #{limit}
            <if test="offset != null">
                OFFSET #{offset}
            </if>
        </if>
    </select>
    
    <!-- 리뷰 삭제 (작성자 확인 포함) -->
    <delete id="deleteRecipeReview">
        DELETE FROM cf_review 
        WHERE review_idx = #{reviewIdx} 
          AND user_idx = #{userIdx}
    </delete>
    
    <!-- 리뷰 수정 (작성자 확인 포함) -->
    <update id="updateRecipeReview">
        UPDATE cf_review 
        SET cmt_content = #{cmtContent}, updated_at = NOW()
        WHERE review_idx = #{reviewIdx} 
          AND user_idx = #{userIdx}
    </update>
    
    <!-- 특정 레시피의 리뷰 개수 조회 -->
    <select id="getRecipeReviewCount" resultType="int">
        SELECT COUNT(*) 
        FROM cf_review 
        WHERE recipe_idx = #{recipeIdx}
    </select>

    <!-- ================== NEW: 챗봇 관련 쿼리 ================== -->
    
    <!-- 대화 세션 저장 -->
    <insert id="insertChatSession">
        INSERT IGNORE INTO cf_chat_session (session_id, user_idx, session_type, created_at)
        VALUES (#{sessionId}, #{userIdx}, #{sessionType}, NOW())
    </insert>

    <!-- 대화 메시지 저장 -->
    <insert id="insertChatMessage">
        INSERT INTO cf_chat_message (session_idx, user_idx, message_type, message_content, response_source, message_tokens, created_at)
        VALUES (
            (SELECT session_idx FROM cf_chat_session WHERE session_id = #{sessionId} ORDER BY created_at DESC LIMIT 1),
            #{userIdx}, #{messageType}, #{messageContent}, #{responseSource}, #{messageTokens}, NOW()
        )
    </insert>

    <!-- 유사한 대화 검색 -->
    <select id="findSimilarConversations" resultType="com.smhrd.web.entity.Board">
        SELECT 
            cm1.message_content as user_message, 
            cm2.message_content as bot_response,
            cm1.created_at, 
            cm2.response_source
        FROM cf_chat_message cm1
        JOIN cf_chat_message cm2 ON cm1.session_idx = cm2.session_idx 
                                  AND cm2.message_idx = (
                                      SELECT MIN(message_idx) 
                                      FROM cf_chat_message 
                                      WHERE session_idx = cm1.session_idx 
                                        AND message_idx > cm1.message_idx 
                                        AND message_type = 'bot'
                                  )
        WHERE cm1.message_type = 'user' 
          AND cm2.message_type = 'bot'
          AND cm1.message_content LIKE CONCAT('%', #{keyword}, '%')
          <if test="userIdx != null">
              AND cm1.user_idx = #{userIdx}
          </if>
        ORDER BY cm1.created_at DESC
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 사용자 대화 기록 조회 -->
    <select id="getUserConversationHistory" resultType="com.smhrd.web.entity.Board">
        SELECT message_content, message_type, created_at
        FROM cf_chat_message
        WHERE user_idx = #{userIdx}
        ORDER BY created_at DESC
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 오늘 API 사용량 조회 -->
    <select id="getTodayApiUsage" resultType="int">
        SELECT COUNT(*) FROM cf_chat_message 
        WHERE response_source = 'openai' 
          AND DATE(created_at) = #{date}
    </select>

    <!-- 알레르기 제외 레시피 조회 -->
    <select id="getAllergyFreeRecipes" resultType="com.smhrd.web.entity.Board">
        SELECT r.recipe_idx, r.recipe_name, r.recipe_desc, r.cook_type, 
               r.recipe_difficulty, r.cooking_time, r.servings, r.tags, r.recipe_img, 
               COALESCE(r.view_count, 0) as view_count
        FROM cf_recipe r
        <if test="allergyIds != null and allergyIds.size() > 0">
            WHERE r.recipe_idx NOT IN (
                SELECT DISTINCT inp.recipe_idx
                FROM cf_input inp
                INNER JOIN cf_ingre_alergy ia ON inp.ingre_idx = ia.ingre_idx
                WHERE ia.alergy_idx IN
                <foreach item="id" collection="allergyIds" open="(" separator="," close=")">
                    #{id}
                </foreach>
            )
            AND
        </if>
        <if test="allergyIds == null or allergyIds.size() == 0">
            WHERE
        </if>
        r.recipe_name IS NOT NULL
        AND r.recipe_desc IS NOT NULL
        ORDER BY 
            CASE WHEN r.tags IS NOT NULL AND r.tags != '' THEN 1 ELSE 2 END,
            COALESCE(r.view_count, 0) DESC,
            r.created_at DESC
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 키워드 검색 + 알레르기 제외 -->
    <select id="searchAllergyFreeRecipes" resultType="com.smhrd.web.entity.Board">
        SELECT r.recipe_idx, r.recipe_name, r.recipe_desc, r.cook_type, 
               r.recipe_difficulty, r.cooking_time, r.servings, r.tags, r.recipe_img, 
               COALESCE(r.view_count, 0) as view_count
        FROM cf_recipe r
        <if test="allergyIds != null and allergyIds.size() > 0">
            WHERE r.recipe_idx NOT IN (
                SELECT DISTINCT inp.recipe_idx
                FROM cf_input inp
                INNER JOIN cf_ingre_alergy ia ON inp.ingre_idx = ia.ingre_idx
                WHERE ia.alergy_idx IN
                <foreach item="id" collection="allergyIds" open="(" separator="," close=")">
                    #{id}
                </foreach>
            )
            AND
        </if>
        <if test="allergyIds == null or allergyIds.size() == 0">
            WHERE
        </if>
        r.recipe_name IS NOT NULL
        AND r.recipe_desc IS NOT NULL
        <if test="keyword != null and keyword != ''">
            AND (r.recipe_name LIKE CONCAT('%', #{keyword}, '%') 
                 OR r.tags LIKE CONCAT('%', #{keyword}, '%')
                 OR r.recipe_desc LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        ORDER BY COALESCE(r.view_count, 0) DESC, r.created_at DESC
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

    <!-- 오래된 대화 메시지 삭제 -->
    <delete id="deleteOldChatMessages">
        DELETE FROM cf_chat_message 
        WHERE created_at &lt; DATE_SUB(NOW(), INTERVAL #{days} DAY)
    </delete>

</mapper>
