<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smhrd.web.mapper.BoardMapper">

	<!-- 1) 이메일 중복 체크용 SELECT -->
	<select id="selectUserByEmail" parameterType="String"
		resultType="com.smhrd.web.entity.Board">
		SELECT * FROM cf_user WHERE email = #{email}
	</select>
	
	<!-- 2) 회원가입 -->
	<insert id="insertSocialUser"
		parameterType="com.smhrd.web.entity.Board" useGeneratedKeys="true"
		keyProperty="user_idx">
		INSERT INTO cf_user (
		email, pw, nick, auth_type, social_id,
		alg_code, prefer_taste, cooking_skill,
		joined_at, profile_img
		) VALUES (
		#{email}, #{pw}, #{nick}, #{auth_type}, #{social_id},
		#{alg_code}, #{prefer_taste}, #{cooking_skill},
		NOW(), #{profile_img}
		)
	</insert>

	<!-- 3) 알러지 이름 목록으로 인덱스 목록 조회 -->
	<select id="getAllergyIdxListByNames"
		parameterType="java.util.List" resultType="int">
		SELECT alergy_idx
		FROM cf_alergy
		WHERE alergy_name IN
		<foreach collection="names" item="name" open="(" separator=","
			close=")">
			#{name}
		</foreach>
	</select>

	<!-- 4) 사용자-알러지 매핑 다중 INSERT1 -->
	<insert id="insertUserAllergies" parameterType="map">
    INSERT INTO cf_user_alergy (user_idx, alergy_idx)
    VALUES
    <foreach collection="alergy_idx_list" item="alergy_idx" separator=",">
        (#{user_idx}, #{alergy_idx})
    </foreach>
</insert>

	<select id="selectUserByIdx" parameterType="int"
		resultType="com.smhrd.web.entity.Board">
		SELECT * FROM cf_user
		WHERE user_idx = #{user_idx}
	</select>

	<update id="updateUserInfo"
		parameterType="com.smhrd.web.entity.Board">
		UPDATE cf_user
		SET nick = #{nick},
		alg_code = #{alg_code},
		prefer_taste = #{prefer_taste},
		cooking_skill = #{cooking_skill},
		profile_img = #{profile_img}
		WHERE user_idx = #{user_idx}
	</update>

	<!-- 레시피 조회수 관련 -->
	<update id="updateRecipeViewCount" parameterType="int">
		UPDATE cf_recipe
		SET view_count = COALESCE(view_count, 0) + 1
		WHERE recipe_idx = #{recipe_idx}
	</update>

	<select id="getTopRecipesByViewCount" parameterType="int"
		resultType="com.smhrd.web.entity.Board">
		SELECT
		recipe_idx, recipe_name, recipe_desc, recipe_img,
		cook_type, recipe_difficulty, cooking_time, servings,
		tags, COALESCE(view_count,0) AS view_count, created_at
		FROM cf_recipe
		WHERE recipe_name IS NOT NULL
		AND recipe_desc IS NOT NULL
		AND recipe_img IS NOT NULL
		AND recipe_img &lt;&gt; ''  <!-- <, > 문자를 &lt;, &gt; 로 이스케이프 -->
		ORDER BY view_count DESC, created_at DESC
		<if test="limit != null">
			LIMIT #{limit}
		</if>
	</select>

	<select id="getRecipesSortedByViewCount"
		resultType="com.smhrd.web.entity.Board">
		SELECT
		recipe_idx, recipe_name, recipe_desc, recipe_img,
		cook_type, recipe_difficulty, cooking_time, servings,
		tags, COALESCE(view_count,0) AS view_count, created_at,
		(SELECT COUNT(*) FROM cf_review WHERE recipe_idx = r.recipe_idx) AS
		review_count
		FROM cf_recipe r
		WHERE recipe_name IS NOT NULL
		AND recipe_desc IS NOT NULL
		ORDER BY view_count DESC, created_at DESC
		<if test="limit != null">LIMIT #{limit}</if>
	</select>

	<select id="getRecipeDetailWithViewCount"
		resultType="com.smhrd.web.entity.Board">
		SELECT
		r.*,
		u.nick AS author_nick,
		COALESCE(r.view_count,0) AS view_count,
		(SELECT COUNT(*) FROM cf_review WHERE recipe_idx = r.recipe_idx) AS
		review_count
		FROM cf_recipe r
		LEFT JOIN cf_user u ON r.user_idx = u.user_idx
		WHERE r.recipe_idx = #{recipe_idx}
	</select>

	<!-- 리뷰 관련 -->
	<insert id="insertRecipeReview">
		INSERT INTO cf_review (recipe_idx, user_idx, cmt_content, review_img,
		super_idx, created_at)
		VALUES (#{recipe_idx}, #{user_idx}, #{cmt_content}, #{review_img},
		#{super_idx}, NOW())
	</insert>

	<!-- 리뷰 목록 조회 (이미지 포함) -->
	<select id="getRecipeReviews" resultType="Board">
		SELECT r.review_idx, r.recipe_idx, r.user_idx, r.cmt_content, r.review_img,
		r.created_at,
		u.nick
		FROM cf_review r
		LEFT JOIN cf_user u ON r.user_idx = u.user_idx
		WHERE r.recipe_idx = #{recipe_idx}
		ORDER BY r.created_at DESC
		LIMIT #{limit} OFFSET #{offset}
	</select>

	<delete id="deleteRecipeReview">
		DELETE FROM cf_review
		WHERE review_idx = #{review_idx}
		AND user_idx = #{user_idx}
	</delete>

	<update id="updateRecipeReview">
		UPDATE cf_review
		SET cmt_content = #{cmt_content}, updated_at = NOW()
		WHERE review_idx = #{review_idx}
		AND user_idx = #{user_idx}
	</update>

	<select id="getRecipeReviewCount" resultType="int">
		SELECT COUNT(*)
		FROM cf_review
		WHERE recipe_idx = #{recipe_idx}
	</select>

	<!-- 챗봇 관련 -->
	<insert id="insertChatSession">
		INSERT IGNORE INTO cf_chat_session (session_id, user_idx, session_type,
		created_at)
		VALUES (#{session_id}, #{user_idx}, #{session_type}, NOW())
	</insert>

	<insert id="insertChatMessage">
		INSERT INTO cf_chat_message
		(session_idx, user_idx, message_type, message_content, response_source,
		message_tokens, created_at)
		VALUES (
		(SELECT session_idx FROM cf_chat_session WHERE session_id = #{session_id}
		ORDER BY created_at DESC LIMIT 1),
		#{user_idx}, #{message_type}, #{message_content}, #{response_source},
		#{message_tokens}, NOW()
		)
	</insert>

	<select id="findSimilarConversations"
		resultType="com.smhrd.web.entity.Board">
		SELECT
		cm1.message_content AS user_message,
		cm2.message_content AS bot_response,
		cm1.created_at, cm2.response_source
		FROM cf_chat_message cm1
		JOIN cf_chat_message cm2
		ON cm1.session_idx = cm2.session_idx
		AND cm2.message_idx = (
		SELECT MIN(message_idx)
		FROM cf_chat_message
		WHERE session_idx = cm1.session_idx
		AND message_idx > cm1.message_idx
		AND message_type = 'bot'
		)
		WHERE cm1.message_type = 'user'
		AND cm2.message_type = 'bot'
		AND cm1.message_content LIKE CONCAT('%', #{keyword}, '%')
		<if test="user_idx != null">
			AND cm1.user_idx = #{user_idx}
		</if>
		ORDER BY cm1.created_at DESC
		<if test="limit != null">LIMIT #{limit}</if>
	</select>

	<select id="getUserConversationHistory"
		resultType="com.smhrd.web.entity.Board">
		SELECT message_content, message_type, created_at
		FROM cf_chat_message
		WHERE user_idx = #{user_idx}
		ORDER BY created_at DESC
		<if test="limit != null">LIMIT #{limit}</if>
	</select>

	<select id="getTodayApiUsage" resultType="int">
		SELECT COUNT(*)
		FROM cf_chat_message
		WHERE response_source = 'openai'
		AND DATE(created_at) = #{date}
	</select>

	<select id="getAllergyFreeRecipes" parameterType="map"
		resultType="com.smhrd.web.entity.Board">
		SELECT
		r.recipe_idx, r.recipe_name, r.recipe_desc, r.cook_type,
		r.recipe_difficulty, r.cooking_time, r.servings, r.tags, r.recipe_img,
		COALESCE(r.view_count,0) AS view_count
		FROM cf_recipe r
		<where>
			<if test="allergy_ids != null and allergy_ids.size() > 0">
				r.recipe_idx NOT IN (
				SELECT DISTINCT inp.recipe_idx
				FROM cf_input inp
				JOIN cf_ingre_alergy ia ON inp.ingre_idx = ia.ingre_idx
				WHERE ia.alergy_idx IN
				<foreach item="id" collection="allergy_ids" open="("
					separator="," close=")">
					#{id}
				</foreach>
				)
			</if>
			AND r.recipe_name IS NOT NULL
			AND r.recipe_desc IS NOT NULL
		</where>
		ORDER BY
		CASE WHEN r.tags &lt;&gt; '' THEN 1 ELSE 2 END,
		COALESCE(r.view_count,0) DESC,
		r.created_at DESC
		<if test="limit != null">
			LIMIT #{limit}
		</if>
	</select>

	<!-- 키워드 + 알레르기 제외 검색 -->
	<select id="searchAllergyFreeRecipes"
		resultType="com.smhrd.web.entity.Board">
		SELECT
		r.recipe_idx, r.recipe_name, r.recipe_desc, r.cook_type,
		r.recipe_difficulty, r.cooking_time, r.servings, r.tags, r.recipe_img,
		COALESCE(r.view_count,0) AS view_count
		FROM cf_recipe r
		<if test="allergy_ids != null and allergy_ids.size() > 0">
			WHERE r.recipe_idx NOT IN (
			SELECT DISTINCT inp.recipe_idx
			FROM cf_input inp
			JOIN cf_ingre_alergy ia ON inp.ingre_idx = ia.ingre_idx
			WHERE ia.alergy_idx IN
			<foreach item="id" collection="allergy_ids" open="("
				separator="," close=")">
				#{id}
			</foreach>
			)
			AND
		</if>
		<if test="allergy_ids == null or allergy_ids.size() == 0">
			WHERE
		</if>
		r.recipe_name IS NOT NULL
		AND r.recipe_desc IS NOT NULL
		<if test="keyword != null and keyword != ''">
			AND (
			r.recipe_name LIKE CONCAT('%', #{keyword}, '%')
			OR r.tags LIKE CONCAT('%', #{keyword}, '%')
			OR r.recipe_desc LIKE CONCAT('%', #{keyword}, '%')
			)
		</if>
		ORDER BY COALESCE(r.view_count,0) DESC, r.created_at DESC
		<if test="limit != null">LIMIT #{limit}</if>
	</select>

	<delete id="deleteOldChatMessages" parameterType="int">
		DELETE FROM cf_chat_message
		WHERE created_at &lt; DATE_SUB(NOW(), INTERVAL #{days} DAY)
	</delete>

	<select id="getRecipeSteps"
		resultType="com.smhrd.web.entity.Board">
		SELECT
		*
		FROM cf_recipe_detail
		WHERE recipe_idx = #{recipe_idx}
		ORDER BY step_order
	</select>
	<insert id="insertReview">
		INSERT INTO cf_review (recipe_idx, user_idx, cmt_content, rating)
		VALUES (#{recipe_idx}, #{user_idx}, #{cmt_content}, #{rating})
	</insert>

	<select id="getRecipeIngredients" parameterType="Integer"
		resultType="Board">
		SELECT
		i.ingre_name,
		inp.input_amount,
		i.ingre_unit
		FROM cf_input inp
		INNER JOIN cf_ingredient i ON inp.ingre_idx = i.ingre_idx
		WHERE inp.recipe_idx = #{recipe_idx}
		ORDER BY inp.created_at
	</select>

	<select id="getAllAllergies" resultType="Board">
		SELECT alergy_idx, alergy_name, alergy_info
		FROM cf_alergy
		ORDER BY alergy_idx;
	</select>
	
	<select id="selectKeywordsByAlergyIdxs" parameterType="list" resultType="string">
  SELECT keyword
  FROM allergy_keywords
  <where>
    <!-- alergyIdxs가 있을 때만 IN 절 사용 -->
    <if test="alergyIdxs != null and alergyIdxs.size() > 0">
      alergy_idx IN
      <foreach item="idx" collection="alergyIdxs" open="(" separator="," close=")">
        #{idx}
      </foreach>
    </if>
    <!-- 없으면 항상 false 처리로 빈 리스트 반환 -->
    <if test="alergyIdxs == null or alergyIdxs.size() == 0">
      1 = 0
    </if>
  </where>
</select>

</mapper>
